    public void clickViewReportAndExtractField(List<String> currentRow, String cellText_record_number, List<String> currentRowLog){
        // 需要切换一下窗口句柄 因为新增了一个窗口
        // 获取所有窗口句柄
        System.out.println("进入到clickViewReportAndExtractField函数");
        Set<String> windowHandles_1 = webDriver.getWindowHandles();
        System.out.print("所有窗口的句柄的长度 ");
        System.out.println(windowHandles_1.size());
        System.out.print("所有窗口的句柄的内容 ");
        System.out.println(windowHandles_1);
        // 获取最新窗口的句柄
        String latestWindowHandle = null;
        for (String handle : windowHandles_1) {
            latestWindowHandle = handle;
        }
        // 切换到最新窗口
        if (latestWindowHandle != null) {
            webDriver.switchTo().window(latestWindowHandle);
            System.out.print("已切换到最新窗口 当前为 ");
            System.out.println(webDriver.getWindowHandle());
            windowHandlesList.add(webDriver.getWindowHandle());
        }

//        String pageSource = webDriver.getPageSource();
//        // 保存 HTML 内容到文件
//        try (FileWriter writer = new FileWriter("page_before_click_view_report.html")) {
//            writer.write(pageSource);
//            System.out.println("HTML 内容已保存到 page_before_click_view_report.html 文件中。");
//        } catch (IOException e) {
//            throw new RuntimeException(e);
//        }

        // /html/body/div/form/div[4]/div/div[10]/div[3]/div[2]/div/div/div/div[1]/div/div/div[3]/ul/li[4]/span

        //点击 details
        WebElement detailsButton = webDriver.findElement(By.xpath("/html/body/div/form/div[4]/div/div[10]/div[3]/div[2]/div/div/div/div[1]/div/div/div[3]/ul/li[4]/span"));
        JavascriptExecutor js_go = (JavascriptExecutor) webDriver;
        js_go.executeScript("arguments[0].click();", detailsButton);
        System.out.println("Clicked the details button in new webpage");

        Set<String> windowHandles_2 = webDriver.getWindowHandles();
        System.out.print("所有窗口的句柄的长度 ");
        System.out.println(windowHandles_2.size());
        System.out.print("所有窗口的句柄的内容 ");
        System.out.println(windowHandles_2);
        // 获取最新窗口的句柄
        latestWindowHandle = null;
        for (String handle : windowHandles_2) {
            latestWindowHandle = handle;
        }
        // 切换到最新窗口
        if (latestWindowHandle != null) {
            webDriver.switchTo().window(latestWindowHandle);
            System.out.print("已切换到最新窗口 当前窗口为 ");
            System.out.println(webDriver.getWindowHandle());
        }

        try {
            Thread.sleep(4000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        //点击 view report
        // /html/body/div/form/div[4]/div/div[10]/div[3]/div[2]/div/div/div/div[3]/div[1]/div/div[2]/div/div[1]/div/div[1]/div/ul/li[2]/div[2]/a
        WebElement vieweportButton = webDriver.findElement(By.xpath("/html/body/div/form/div[4]/div/div[10]/div[3]/div[2]/div/div/div/div[3]/div[1]/div/div[2]/div/div[1]/div/div[1]/div/ul/li[2]/div[2]/a"));
        JavascriptExecutor js_view = (JavascriptExecutor) webDriver;
        js_view.executeScript("arguments[0].click();", vieweportButton);
        System.out.println("Clicked the view report button in new webpage");

        try {
            Thread.sleep(10000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println("进入view report界面");

        // 刷新 开始获取view report界面里的字段
        // 获取所有窗口句柄
        Set<String> windowHandles_v = webDriver.getWindowHandles();
        System.out.print("所有窗口的句柄的长度 ");
        System.out.println(windowHandles_v.size());
        System.out.print("所有窗口的句柄的内容 ");
        System.out.println(windowHandles_v);
        // 获取最新窗口的句柄
        String latestWindowHandle_v = null;
        for (String handle : windowHandles_v) {
            latestWindowHandle_v = handle;
        }
        // 切换到最新窗口
        if (latestWindowHandle_v != null) {
            webDriver.switchTo().window(latestWindowHandle_v);
            System.out.print("已切换到最新窗口 当前窗口为");
            System.out.println(webDriver.getWindowHandle());
            windowHandlesList.add(webDriver.getWindowHandle());
        }
        System.out.println("开始提取字段");
        //todo 为下面的所有webDriver.findElement都添加try catch代码块 、
//        WebElement ageLabel = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[3]/div/div/div/div/div[3]/fieldset/div[1]/div/ul/li[1]/div/label"));
//        System.out.println(ageLabel.getText());

        // 第一到五列 暂时填充为空字符串
        currentRow.add(""); //1 产品名称
        currentRow.add(""); //2 注册证编号
        currentRow.add(""); //3 产地
        currentRow.add(""); //4 管理类别
        currentRow.add(""); //5 产品类别

        //6 产品批号 D4 serial number or lot number 二者选一
        WebElement serialNumber= webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[9]/div/div/div/div/div[5]/fieldset/div[7]/div/ul/li[2]/div/label[2]"));
        System.out.print("SerialNumber ");
        System.out.println(serialNumber.getText());

        WebElement lotNumber = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[9]/div/div/div/div/div[5]/fieldset/div[2]/div/ul/li[2]/div"));
        System.out.print("LotNumber ");
        System.out.println(lotNumber.getText());
        if (serialNumber.getText().isEmpty() || serialNumber.getText().equals("N/A")) {
            currentRow.add(lotNumber.getText());
        }else{
            currentRow.add(serialNumber.getText());
        }

        //产品编号 UDI 生产日期 注意生产日期就是不填
        currentRow.add(""); //7
        currentRow.add(""); //8
        currentRow.add(""); //9

        // 如果是试剂的话 MDR上有有效期这个字段 仪器的话没有有效期这个字段 10
        WebElement expirationDate = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[9]/div/div/div/div/div[5]/fieldset/div[5]/div/ul/li[2]/div"));
        System.out.print("ExpirationDate ");
        System.out.println(expirationDate.getText());
        if (!expirationDate.getText().isEmpty()) {
            String newFormatDate = convertDate(expirationDate.getText());
            currentRow.add(newFormatDate);
        }else{
            currentRow.add("");
        }

        // 事件发生日期 11
        WebElement dateOfEvent = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[5]/div/div/div/div/div[5]/fieldset/div[1]/div/ul/li[2]/div/label[2]"));
        System.out.print("dateOfEvent ");
        String stringDateOfEvent = dateOfEvent.getText();
        System.out.println(stringDateOfEvent);
        if (!stringDateOfEvent.isEmpty()) {
            String newFormatEventDate = convertDate(stringDateOfEvent);
            currentRow.add(newFormatEventDate);
        }else{
            currentRow.add("");
        }

        // 发现或者悉知日期 这个字段来自于西门子log 暂时不填 12
        currentRow.add("");

        // 伤害 类型 一般选为 其他 13
        currentRow.add("其他");
        // 伤害表现 不填 14
        currentRow.add("");
        // 姓名不填 15
        currentRow.add("");

        //出生日期 其实一般情况都不填 16
        WebElement dateOfBirth= webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[3]/div/div/div/div/div[3]/fieldset/div[3]/div/ul/li[2]/div"));
        System.out.print("dateOfBirth ");
        System.out.println(dateOfBirth.getText());
        currentRow.add(dateOfBirth.getText());

        //年龄 数字
        //   /html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[3]/div/div/div/div/div[3]/fieldset/div[1]/div/ul/li[2]
        WebElement ageNumber = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[3]/div/div/div/div/div[3]/fieldset/div[1]/div/ul/li[2]"));
        System.out.print("age字段 ");
        String ageNumberOriginalText = ageNumber.getText();
        System.out.println("age原字段");
        System.out.println(ageNumberOriginalText);
        String newAgeNumberString = ageNumberOriginalText.replaceAll("[\n\r]+", "-");
        System.out.println(newAgeNumberString);
        String[] parts = newAgeNumberString.split("-");
        String timeUnit = ""; //年龄单位 17
        String numberForAge = ""; //年龄数字 18
        if (parts.length > 1) {
            timeUnit = parts[1];
            numberForAge = parts[0];
        }else{
            timeUnit = ""; //
            numberForAge = "";
        }
        // 填充
        if (timeUnit.equals("Years")){
            currentRow.add("岁");
        }else if (timeUnit.equals("Months")){
            currentRow.add("月");
        }else if (timeUnit.equals("Days")){
            currentRow.add("日");
        }else{
            currentRow.add("");
        }
        currentRow.add(numberForAge);

        //sex
        WebElement sex = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[3]/div/div/div/div/div[5]/fieldset/div[1]/div/ul/li[2]/div"));
        System.out.print("sex ");
        String sexText = sex.getText();
        System.out.println(sexText);
        if (sexText.equals("Female")){
            currentRow.add("女");
        }else if (sexText.equals("Male")){
            currentRow.add("男");
        }else{
            currentRow.add("");
        }

        // 病历号
        currentRow.add(""); //20

        // 既往病史 21
        WebElement historyIllness = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[5]/div/div/div/div/div[7]/fieldset/div[1]/div/ul/li[2]/div/div/div"));
        System.out.print("既往病史 ");
        String historyIllnessOriginalText = historyIllness.getText();
        currentRow.add(historyIllnessOriginalText);

        // 故障表现 22
        WebElement bug = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[17]/div/div/div/div/div[7]/fieldset/div[1]/div/div[1]/div/div[1]/div[3]/div/table/tbody/tr[2]/td[4]/div[1]/label[2]"));
        System.out.println("故障表现 ");
        String bugOriginalText = cellText_record_number + " " + bug.getText();
        System.out.println(bugOriginalText);
        currentRow.add(bugOriginalText);

        //预期治疗疾病或作用 23
        currentRow.add("");

        //器械使用日期 24
        if (!stringDateOfEvent.isEmpty()) {
            String newFormatEventDate = convertDate(stringDateOfEvent);
            currentRow.add(newFormatEventDate);
        }else{
            currentRow.add("");
        }

        //使用场所 25
        currentRow.add("医疗机构");

        // 场所名称 26
        // 医院名称
        WebElement facilityName = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[11]/div/div/div/div/div[1]/fieldset/div[9]/div/ul/li[2]/div/label[2]"));
        System.out.print("facilityName ");
        String stringfacilityName = facilityName.getText();
        System.out.println(stringfacilityName);
        // 国家
        WebElement countryName = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[11]/div/div/div/div/div[1]/fieldset/div[21]/div/ul/li[2]/div/div/div/label[1]"));
        System.out.print("countryName ");
        String stringCountryName = countryName.getText();
        System.out.println(stringCountryName);
        // 合并
        currentRow.add(stringfacilityName + ", " + stringCountryName);

        // 使用过程 27
        //  /html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[5]/div/div/div/div/div[5]/fieldset/div[4]/div/ul/li[2]/div/div/div
        WebElement description = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[5]/div/div/div/div/div[5]/fieldset/div[4]/div/ul/li[2]/div/div/div"));
        System.out.print("使用过程 ");
        String originalText = description.getText();
        System.out.println(originalText);
        originalText = originalText.replaceAll("[\n\r]+", " ");

        WebElement B7 = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[5]/div/div/div/div/div[5]/fieldset/div[6]/div/ul/li[2]/div/div/div"));
        System.out.print("B7 ");
        String B7OriginalText = B7.getText();
        B7OriginalText = B7OriginalText.replaceAll("[\n\r]+", " ");

        String translatedOriginalText = TranslationUtil.translate(originalText);
        String translatedB7OriginalText = TranslationUtil.translate(B7OriginalText);

        String finalTranslatedText = translatedOriginalText + '\n' + translatedB7OriginalText;
        System.out.println(finalTranslatedText);
        currentRow.add(finalTranslatedText);

        // 合并用药器械情况说明 28
        currentRow.add("");

        //是否展开了调查 29
        currentRow.add("是");

        //调查情况 30
        WebElement h8 = webDriver.findElement(By.xpath("/html/body/form/div[7]/div/div[2]/div/div[1]/div/div/div[17]/div/div/div/div/div[11]/fieldset/div[9]/div/ul/li[2]/div/div/div"));
        System.out.print("h8 ");
        String h8OriginalText = h8.getText();
        System.out.println(h8OriginalText);
        String h8OriginalText2 = h8OriginalText.replaceAll("[\n\r]+", " ");
        System.out.println("h8替换换行符");
        System.out.println(h8OriginalText2);
        String translatedH8OriginalText2 = TranslationUtil.translate(h8OriginalText2);
        currentRow.add(translatedH8OriginalText2);

        // 剩余七列
        currentRow.add(""); //31
        currentRow.add(""); //32
        currentRow.add(""); //33
        currentRow.add(""); //34
        currentRow.add(""); //35
        currentRow.add(""); //36
        currentRow.add(""); //37

        System.out.println("完成了一次row的add");
        System.out.print("currentRow list的长度为 " + currentRow.size());
        //将当前row 添加到原始的成员变量里去
        textsNeedtoBeInserted.add(currentRow);

        System.out.println("记录处理的log");
        String currentURl = webDriver.getCurrentUrl();
        currentRowLog.add(cellText_record_number);
        currentRowLog.add(currentURl);
        log.add(currentRowLog);

        //处理完当前MDR页面上的所有元素 关闭当前MD窗口
        webDriver.close();
        windowHandlesList.remove(windowHandlesList.size() - 1);
//        System.out.print("关闭了MDR界面以后的 当前所有句柄展示 ");
//        System.out.println(webDriver.getWindowHandles());
//        System.out.println("list 展示开始");
//        for (String handle : windowHandlesList) {
//            System.out.println(handle);
//        }
//        System.out.println("list 展示结束");
        System.out.print("手动切换了一下上一个窗口 查看当前窗口的handle ");
        webDriver.switchTo().window(windowHandlesList.get(windowHandlesList.size() - 1));
        System.out.println(webDriver.getWindowHandle());

        System.out.println("已经关闭了MDR页面");

        webDriver.close();
        windowHandlesList.remove(windowHandlesList.size() - 1);
//        System.out.print("关闭了FDA界面以后的 当前所有句柄展示 ");
//        System.out.println(webDriver.getWindowHandles());
//        System.out.println("list 展示开始");
//        for (String handle : windowHandlesList) {
//            System.out.println(handle);
//        }
//        System.out.println("list 展示结束");
        System.out.print("手动切换了一下上一个窗口也就是dashboard的界面 查看当前窗口的handle ");
        webDriver.switchTo().window(windowHandlesList.get(windowHandlesList.size() - 1));
        System.out.print("现在list的长度应该是1 ");
        System.out.println(windowHandlesList.size());
        System.out.println(webDriver.getWindowHandle());
    }
